We need to go on implementing some boiler plate code.
- need some models (Overview, ActionsCount) to store display data
- reference and bind them inside the view
- setting default values

Next we have to create some logic like:
- timer 
- swap screen (and change overview values correctly)
- control bar at the bottom to start, pause and stop current control
- when stopped or paused, then in the middle of the screen should be a message "tap to start / resume"
- also language support 
- and then the app specific logic:
    - after 5 turns, the next action count raise occurs and a new one will be determined
    - new determinate rule: all actions count must have risen be once, then we can start a new raising round


## Add a timer
- new service adding to the container IPlayerTimeService, which handles logic for the player and safe the time
- open: swaping the current player time and ask player time service 
- new framework community toolkit maui for EventToCommandBehaviour

## Add next turn / swap logic
- double tap gesture on grid 
- Setting the values of overview except of "NextAction"

## Do some layout things
- overlay for paused / stopped state, means showing the user that currently nothing running
- adding color palette in Colors.xaml
- go deeper into the timer implementation and start, stop, resume